version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: student_sections_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-student_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-student_pass}
      POSTGRES_DB: ${POSTGRES_DB:-student_sections_db}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-student_user}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  # FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: student_sections_app
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER:-student_user}:${POSTGRES_PASSWORD:-student_pass}@db:5432/${POSTGRES_DB:-student_sections_db}
      SECRET_KEY: ${SECRET_KEY:-super-secret-key-change-in-production}
      ALGORITHM: ${ALGORITHM:-HS256}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      ENVIRONMENT: ${ENVIRONMENT:-development}
    ports:
      - "${APP_PORT:-8000}:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./app:/code/app
      - ./alembic:/code/alembic
      - ./alembic.ini:/code/alembic.ini
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 3 &&
        echo 'Running migrations...' &&
        alembic upgrade head &&
        echo 'Starting application...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
    networks:
      - app_network

  # pgAdmin (опционально для управления БД через UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: student_sections_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    depends_on:
      - db
    networks:
      - app_network
    profiles:
      - tools  # Запускается только с --profile tools

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge
